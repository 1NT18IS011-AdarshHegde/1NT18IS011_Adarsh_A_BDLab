IMPORT csv FILE


adarsh@adarsh:~$ mongoimport --type csv -d iris -c flow --headerline --drop /home/adarsh/Downloads/annual-enterprise-survey-2019-financial-year-provisional-csv.csv
2021-04-20T15:21:04.997+0530	connected to: localhost
2021-04-20T15:21:05.001+0530	dropping: iris.flow
2021-04-20T15:21:07.828+0530	[####################....] iris.flow	4.09MB/4.90MB (83.4%)
2021-04-20T15:21:08.405+0530	[########################] iris.flow	4.90MB/4.90MB (100.0%)
2021-04-20T15:21:08.405+0530	imported 32445 documents
adarsh@adarsh:~$ mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Server has startup warnings: 
2021-04-06T16:56:59.479+0530 I STORAGE  [initandlisten] 
2021-04-06T16:56:59.479+0530 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2021-04-06T16:56:59.479+0530 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2021-04-06T16:57:03.768+0530 I CONTROL  [initandlisten] 
2021-04-06T16:57:03.768+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2021-04-06T16:57:03.768+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2021-04-06T16:57:03.768+0530 I CONTROL  [initandlisten] 
> show dbs
Cust    0.000GB
admin   0.000GB
config  0.000GB
iris    0.002GB
local   0.000GB
> use iris
switched to db iris
> show collections
flow
> db.flow.find()
{ "_id" : ObjectId("607ea40933298183e1aa27e7"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H01", "Variable_name" : "Total income", "Variable_category" : "Financial performance", "Value" : "728,239", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27e8"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H04", "Variable_name" : "Sales, government funding, grants and subsidies", "Variable_category" : "Financial performance", "Value" : "643,809", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27e9"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H05", "Variable_name" : "Interest, dividends and donations", "Variable_category" : "Financial performance", "Value" : "62,924", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27ea"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H07", "Variable_name" : "Non-operating income", "Variable_category" : "Financial performance", "Value" : "21,505", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27eb"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H08", "Variable_name" : "Total expenditure", "Variable_category" : "Financial performance", "Value" : "634,710", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27ec"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H09", "Variable_name" : "Interest and donations", "Variable_category" : "Financial performance", "Value" : "35,250", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27ed"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H10", "Variable_name" : "Indirect taxes", "Variable_category" : "Financial performance", "Value" : "7,458", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27ee"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H11", "Variable_name" : "Depreciation", "Variable_category" : "Financial performance", "Value" : "20,977", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27ef"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H12", "Variable_name" : "Salaries and wages paid", "Variable_category" : "Financial performance", "Value" : "112,960", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f0"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H13", "Variable_name" : "Redundancy and severance", "Variable_category" : "Financial performance", "Value" : 206, "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f1"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H14", "Variable_name" : "Salaries and wages to self employed commission agents", "Variable_category" : "Financial performance", "Value" : "1,767", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f2"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H19", "Variable_name" : "Purchases and other operating expenses", "Variable_category" : "Financial performance", "Value" : "445,481", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f3"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H20", "Variable_name" : "Non-operating expenses", "Variable_category" : "Financial performance", "Value" : "10,817", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f4"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H21", "Variable_name" : "Opening stocks", "Variable_category" : "Financial performance", "Value" : "63,932", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f5"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H22", "Variable_name" : "Closing stocks", "Variable_category" : "Financial performance", "Value" : "67,518", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f6"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H23", "Variable_name" : "Surplus before income tax", "Variable_category" : "Financial performance", "Value" : "97,114", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f7"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H24", "Variable_name" : "Total assets", "Variable_category" : "Financial position", "Value" : "2,216,127", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f8"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H25", "Variable_name" : "Current assets", "Variable_category" : "Financial position", "Value" : "612,930", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27f9"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H26", "Variable_name" : "Fixed tangible assets", "Variable_category" : "Financial position", "Value" : "535,710", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
{ "_id" : ObjectId("607ea40933298183e1aa27fa"), "Year" : 2019, "Industry_aggregation_NZSIOC" : "Level 1", "Industry_code_NZSIOC" : 99999, "Industry_name_NZSIOC" : "All industries", "Units" : "Dollars (millions)", "Variable_code" : "H29", "Variable_name" : "Other assets", "Variable_category" : "Financial position", "Value" : "1,067,488", "Industry_code_ANZSIC06" : "ANZSIC06 divisions A-S (excluding classes K6330, L6711, O7552, O760, O771, O772, S9540, S9601, S9602, and S9603)" }
Type "it" for more
> db.flow.count()
32445

EXPORT csv INTO json


adarsh@adarsh:~$ mongoexport --collection=flow --db=iris --out=/home/adarsh/Downloads/iris1.json
2021-04-20T15:29:24.101+0530	connected to: localhost
2021-04-20T15:29:25.022+0530	[........................]  iris.flow  0/32445  (0.0%)
2021-04-20T15:29:26.022+0530	[#####...................]  iris.flow  8000/32445  (24.7%)
2021-04-20T15:29:27.022+0530	[#################.......]  iris.flow  24000/32445  (74.0%)
2021-04-20T15:29:27.897+0530	[########################]  iris.flow  32445/32445  (100.0%)
2021-04-20T15:29:27.897+0530	exported 32445 records

IMPORT json FILE


adarsh@adarsh:~$ mongoimport --db iris1 --collection flow --file /home/adarsh/Downloads/iris1.json
2021-04-20T15:36:10.363+0530	connected to: localhost
2021-04-20T15:36:12.542+0530	imported 32445 documents
adarsh@adarsh:~$ mongo
MongoDB shell version v3.6.3
connecting to: mongodb://127.0.0.1:27017
MongoDB server version: 3.6.3
Server has startup warnings: 
2021-04-06T16:56:59.479+0530 I STORAGE  [initandlisten] 
2021-04-06T16:56:59.479+0530 I STORAGE  [initandlisten] ** WARNING: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine
2021-04-06T16:56:59.479+0530 I STORAGE  [initandlisten] **          See http://dochub.mongodb.org/core/prodnotes-filesystem
2021-04-06T16:57:03.768+0530 I CONTROL  [initandlisten] 
2021-04-06T16:57:03.768+0530 I CONTROL  [initandlisten] ** WARNING: Access control is not enabled for the database.
2021-04-06T16:57:03.768+0530 I CONTROL  [initandlisten] **          Read and write access to data and configuration is unrestricted.
2021-04-06T16:57:03.768+0530 I CONTROL  [initandlisten] 
> show dbs
Cust    0.000GB
admin   0.000GB
config  0.000GB
iris    0.002GB
iris1   0.002GB
local   0.000GB
> show collections
> use iris1
switched to db iris1
> show collections
flow
> db.flow.count()
32445


EXPORT json INTO csv


adarsh@adarsh:~$ mongoexport --collection=flow --db=iris1 --out=/home/adarsh/Downloads/iris2.csv
2021-04-20T15:39:43.888+0530	connected to: localhost
2021-04-20T15:39:44.884+0530	[........................]  iris1.flow  0/32445  (0.0%)
2021-04-20T15:39:45.884+0530	[###########.............]  iris1.flow  16000/32445  (49.3%)
2021-04-20T15:39:46.884+0530	[#################.......]  iris1.flow  24000/32445  (74.0%)
2021-04-20T15:39:47.411+0530	[########################]  iris1.flow  32445/32445  (100.0%)
2021-04-20T15:39:47.411+0530	exported 32445 records

> show dbs
Cust    0.000GB
admin   0.000GB
config  0.000GB
iris    0.002GB
iris1   0.002GB
local   0.000GB
> use Cust
switched to db Cust
> show collections
customer
orderr_det
> db.customer.find()
{ "_id" : ObjectId("606bebec2d7a7bf877fc6ecd"), "cust_id" : "A123", "amt" : 500, "status" : "A" }
{ "_id" : ObjectId("606bebfd2d7a7bf877fc6ece"), "cust_id" : "A123", "amt" : 250, "status" : "A" }
{ "_id" : ObjectId("606bec122d7a7bf877fc6ecf"), "cust_id" : "B212", "amt" : 200, "status" : "A" }
{ "_id" : ObjectId("606bec282d7a7bf877fc6ed0"), "cust_id" : "A122", "amt" : 300, "status" : "D" }


EXIST OPERATOR

> db.customer.find({"status":{$exists:true}})
{ "_id" : ObjectId("606bebec2d7a7bf877fc6ecd"), "cust_id" : "A123", "amt" : 500, "status" : "A" }
{ "_id" : ObjectId("606bebfd2d7a7bf877fc6ece"), "cust_id" : "A123", "amt" : 250, "status" : "A" }
{ "_id" : ObjectId("606bec122d7a7bf877fc6ecf"), "cust_id" : "B212", "amt" : 200, "status" : "A" }
{ "_id" : ObjectId("606bec282d7a7bf877fc6ed0"), "cust_id" : "A122", "amt" : 300, "status" : "D" }
> db.customer.find({"status":{$exists:false}})


TYPE OPERATOR

> use type
switched to db type
> db.createCollection("type")
{ "ok" : 1 }
> db.type.insert({name:"Adarsh",age:20})
WriteResult({ "nInserted" : 1 })
> db.type.insert({name:"Ashwini",age:20})
WriteResult({ "nInserted" : 1 })
> db.type.insert({name:15,age:17})
WriteResult({ "nInserted" : 1 })
> db.type.insert({name:"Dhruva",age:16})
WriteResult({ "nInserted" : 1 })
> db.type.find().pretty()
{
	"_id" : ObjectId("608414f2378863918f2f2eba"),
	"name" : "Adarsh",
	"age" : 20
}
{
	"_id" : ObjectId("60841541378863918f2f2ebb"),
	"name" : "Ashwini",
	"age" : 20
}
{ "_id" : ObjectId("60841554378863918f2f2ebc"), "name" : 15, "age" : 17 }
{
	"_id" : ObjectId("60841563378863918f2f2ebd"),
	"name" : "Dhruva",
	"age" : 16
}
> db.type.find({"name":{$type:1}})
{ "_id" : ObjectId("60841554378863918f2f2ebc"), "name" : 15, "age" : 17 }
> db.type.find({"name":{$type:2}})
{ "_id" : ObjectId("608414f2378863918f2f2eba"), "name" : "Adarsh", "age" : 20 }
{ "_id" : ObjectId("60841541378863918f2f2ebb"), "name" : "Ashwini", "age" : 20 }
{ "_id" : ObjectId("60841563378863918f2f2ebd"), "name" : "Dhruva", "age" : 16 }
> 

REGULAR EXPRESSION OPERATOR


> db.customer.find({"cust_id":{$regex:"B"}})
{ "_id" : ObjectId("606bec122d7a7bf877fc6ecf"), "cust_id" : "B212", "amt" : 200, "status" : "A" }
> db.customer.find({"cust_id":{$regex:"A"}})
{ "_id" : ObjectId("606bebec2d7a7bf877fc6ecd"), "cust_id" : "A123", "amt" : 500, "status" : "A" }
{ "_id" : ObjectId("606bebfd2d7a7bf877fc6ece"), "cust_id" : "A123", "amt" : 250, "status" : "A" }
{ "_id" : ObjectId("606bec282d7a7bf877fc6ed0"), "cust_id" : "A122", "amt" : 300, "status" : "D" }



CRUD OPERATIONS

> show dbs
admin       0.000GB
config      0.000GB
empdetails  0.000GB
local       0.000GB
> use company
switched to db company
> db.createCollection("Empdetails")
{ "ok" : 1 }
> db.Empdetails.insert({Fname:"Rohan",Lname:"Sharma",age:26,email:"rohan@gmail.com",phone:9008070890,experience:5})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.find()
{ "_id" : ObjectId("6059b8f5c1e8aa1fee67d25f"), "Fname" : "Rohan", "Lname" : "Sharma", "age" : 26, "email" : "rohan@gmail.com", "phone" : 9008070890, "experience" : 5 }
> db.Empdetails.insert({Fname:"Adarsh",Lname:"Hegde",age:20,email:"adarsh@gmail.com",phone:9008070891,experience:1})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.insert({Fname:"Akash",Lname:"NS",age:20,email:"akash@gmail.com",phone:9308070891,experience:2})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.insert({Fname:"Aditya",Lname:"Kumar",age:21,email:"aditya@gmail.com",phone:9308050891,experience:3})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.insert({Fname:"Abhay",Lname:"Yelameli",age:21,email:"abhay@gmail.com",phone:9308056891,experience:4})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.insert({Fname:"Mohan",Lname:"SS",age:27,email:"mohan@gmail.com",phone:9608056891,experience:6})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.insert({Fname:"Aayesha",Lname:"Nomani",age:29,email:"aayesha@gmail.com",phone:9608066891,experience:7})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.insert({Fname:"Abhinav",Lname:"Prakash",age:23,email:"milit@gmail.com",phone:9608766891,experience:8})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.insert({Fname:"Ashwini",Lname:"Hegde",age:33,email:"hegde@gmail.com",phone:9688766891,experience:6})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.insert({Fname:"Sneha",Lname:"SH",age:34,email:"sneha@gmail.com",phone:9688766891,experience:3})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.find()
{ "_id" : ObjectId("6059b8f5c1e8aa1fee67d25f"), "Fname" : "Rohan", "Lname" : "Sharma", "age" : 26, "email" : "rohan@gmail.com", "phone" : 9008070890, "experience" : 5 }
{ "_id" : ObjectId("6059b950c1e8aa1fee67d260"), "Fname" : "Adarsh", "Lname" : "Hegde", "age" : 20, "email" : "adarsh@gmail.com", "phone" : 9008070891, "experience" : 1 }
{ "_id" : ObjectId("6059b975c1e8aa1fee67d261"), "Fname" : "Akash", "Lname" : "NS", "age" : 20, "email" : "akash@gmail.com", "phone" : 9308070891, "experience" : 2 }
{ "_id" : ObjectId("6059b9a1c1e8aa1fee67d262"), "Fname" : "Aditya", "Lname" : "Kumar", "age" : 21, "email" : "aditya@gmail.com", "phone" : 9308050891, "experience" : 3 }
{ "_id" : ObjectId("6059b9c4c1e8aa1fee67d263"), "Fname" : "Abhay", "Lname" : "Yelameli", "age" : 21, "email" : "abhay@gmail.com", "phone" : 9308056891, "experience" : 4 }
{ "_id" : ObjectId("6059b9fac1e8aa1fee67d264"), "Fname" : "Mohan", "Lname" : "SS", "age" : 27, "email" : "mohan@gmail.com", "phone" : 9608056891, "experience" : 6 }
{ "_id" : ObjectId("6059ba26c1e8aa1fee67d265"), "Fname" : "Aayesha", "Lname" : "Nomani", "age" : 29, "email" : "aayesha@gmail.com", "phone" : 9608066891, "experience" : 7 }
{ "_id" : ObjectId("6059ba52c1e8aa1fee67d266"), "Fname" : "Abhinav", "Lname" : "Prakash", "age" : 23, "email" : "milit@gmail.com", "phone" : 9608766891, "experience" : 8 }
{ "_id" : ObjectId("6059ba87c1e8aa1fee67d267"), "Fname" : "Ashwini", "Lname" : "Hegde", "age" : 33, "email" : "hegde@gmail.com", "phone" : 9688766891, "experience" : 6 }
{ "_id" : ObjectId("6059bab1c1e8aa1fee67d268"), "Fname" : "Sneha", "Lname" : "SH", "age" : 34, "email" : "sneha@gmail.com", "phone" : 9688766891, "experience" : 3 }
> db.Empdetails.find().pretty()
{
	"_id" : ObjectId("6059b8f5c1e8aa1fee67d25f"),
	"Fname" : "Rohan",
	"Lname" : "Sharma",
	"age" : 26,
	"email" : "rohan@gmail.com",
	"phone" : 9008070890,
	"experience" : 5
}
{
	"_id" : ObjectId("6059b950c1e8aa1fee67d260"),
	"Fname" : "Adarsh",
	"Lname" : "Hegde",
	"age" : 20,
	"email" : "adarsh@gmail.com",
	"phone" : 9008070891,
	"experience" : 1
}
{
	"_id" : ObjectId("6059b975c1e8aa1fee67d261"),
	"Fname" : "Akash",
	"Lname" : "NS",
	"age" : 20,
	"email" : "akash@gmail.com",
	"phone" : 9308070891,
	"experience" : 2
}
{
	"_id" : ObjectId("6059b9a1c1e8aa1fee67d262"),
	"Fname" : "Aditya",
	"Lname" : "Kumar",
	"age" : 21,
	"email" : "aditya@gmail.com",
	"phone" : 9308050891,
	"experience" : 3
}
{
	"_id" : ObjectId("6059b9c4c1e8aa1fee67d263"),
	"Fname" : "Abhay",
	"Lname" : "Yelameli",
	"age" : 21,
	"email" : "abhay@gmail.com",
	"phone" : 9308056891,
	"experience" : 4
}
{
	"_id" : ObjectId("6059b9fac1e8aa1fee67d264"),
	"Fname" : "Mohan",
	"Lname" : "SS",
	"age" : 27,
	"email" : "mohan@gmail.com",
	"phone" : 9608056891,
	"experience" : 6
}
{
	"_id" : ObjectId("6059ba26c1e8aa1fee67d265"),
	"Fname" : "Aayesha",
	"Lname" : "Nomani",
	"age" : 29,
	"email" : "aayesha@gmail.com",
	"phone" : 9608066891,
	"experience" : 7
}
{
	"_id" : ObjectId("6059ba52c1e8aa1fee67d266"),
	"Fname" : "Abhinav",
	"Lname" : "Prakash",
	"age" : 23,
	"email" : "milit@gmail.com",
	"phone" : 9608766891,
	"experience" : 8
}
{
	"_id" : ObjectId("6059ba87c1e8aa1fee67d267"),
	"Fname" : "Ashwini",
	"Lname" : "Hegde",
	"age" : 33,
	"email" : "hegde@gmail.com",
	"phone" : 9688766891,
	"experience" : 6
}
{
	"_id" : ObjectId("6059bab1c1e8aa1fee67d268"),
	"Fname" : "Sneha",
	"Lname" : "SH",
	"age" : 34,
	"email" : "sneha@gmail.com",
	"phone" : 9688766891,
	"experience" : 3
}
> db.createCollection("test")
{ "ok" : 1 }
> db.test.insertMany([{id:1,name:"Adarsh"},{id:2,name:"Alok"},{id:3,name:"Ajay"},{id:4,name:"Anjali"}])
{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("6059bbf4c1e8aa1fee67d269"),
		ObjectId("6059bbf4c1e8aa1fee67d26a"),
		ObjectId("6059bbf4c1e8aa1fee67d26b"),
		ObjectId("6059bbf4c1e8aa1fee67d26c")
	]
}
> db.test.find()
{ "_id" : ObjectId("6059bbf4c1e8aa1fee67d269"), "id" : 1, "name" : "Adarsh" }
{ "_id" : ObjectId("6059bbf4c1e8aa1fee67d26a"), "id" : 2, "name" : "Alok" }
{ "_id" : ObjectId("6059bbf4c1e8aa1fee67d26b"), "id" : 3, "name" : "Ajay" }
{ "_id" : ObjectId("6059bbf4c1e8aa1fee67d26c"), "id" : 4, "name" : "Anjali" }
> db.test.find().pretty()
{
	"_id" : ObjectId("6059bbf4c1e8aa1fee67d269"),
	"id" : 1,
	"name" : "Adarsh"
}
{ "_id" : ObjectId("6059bbf4c1e8aa1fee67d26a"), "id" : 2, "name" : "Alok" }
{ "_id" : ObjectId("6059bbf4c1e8aa1fee67d26b"), "id" : 3, "name" : "Ajay" }
{
	"_id" : ObjectId("6059bbf4c1e8aa1fee67d26c"),
	"id" : 4,
	"name" : "Anjali"
}
> db.test.drop()
true
> ^C
bye
 db.Empdetails.save({fname:"Rachel",lname:"Smith",age:25,email:"Rachel@gmail.com",phone:9481113463,experience:5})
WriteResult({ "nInserted" : 1 })
> db.Empdetails.save({_id:1,fname:"Rachel",lname:"Smith",age:25,email:"Rachel@gmail.com",phone:9481113463,experience:5})
WriteResult({ "nMatched" : 0, "nUpserted" : 1, "nModified" : 0, "_id" : 1 })
> db.Empdetails.find({fname="Rachel"})
uncaught exception: SyntaxError: missing : after property id :
@(shell):1:25
> db.Empdetails.find({fname:"Rachel"})
{ "_id" : ObjectId("6059c2081a8e42ea7739c438"), "fname" : "Rachel", "lname" : "Smith", "age" : 25, "email" : "Rachel@gmail.com", "phone" : 9481113463, "experience" : 5 }
{ "_id" : 1, "fname" : "Rachel", "lname" : "Smith", "age" : 25, "email" : "Rachel@gmail.com", "phone" : 9481113463, "experience" : 5 }
> db.Empdetails.deleteOne({_id:1})
{ "acknowledged" : true, "deletedCount" : 1 }
> db.Empdetails.find({lname:"Smith",experience:5})
{ "_id" : ObjectId("6059c2081a8e42ea7739c438"), "fname" : "Rachel", "lname" : "Smith", "age" : 25, "email" : "Rachel@gmail.com", "phone" : 9481113463, "experience" : 5 }
> db.Empdetails.find({$or: [{experience:5},{experience:6}]}).pretty()
{
	"_id" : ObjectId("6059b8f5c1e8aa1fee67d25f"),
	"Fname" : "Rohan",
	"Lname" : "Sharma",
	"age" : 26,
	"email" : "rohan@gmail.com",
	"phone" : 9008070890,
	"experience" : 5
}
{
	"_id" : ObjectId("6059b9fac1e8aa1fee67d264"),
	"Fname" : "Mohan",
	"Lname" : "SS",
	"age" : 27,
	"email" : "mohan@gmail.com",
	"phone" : 9608056891,
	"experience" : 6
}
{
	"_id" : ObjectId("6059ba87c1e8aa1fee67d267"),
	"Fname" : "Ashwini",
	"Lname" : "Hegde",
	"age" : 33,
	"email" : "hegde@gmail.com",
	"phone" : 9688766891,
	"experience" : 6
}
{
	"_id" : ObjectId("6059c2081a8e42ea7739c438"),
	"fname" : "Rachel",
	"lname" : "Smith",
	"age" : 25,
	"email" : "Rachel@gmail.com",
	"phone" : 9481113463,
	"experience" : 5
}



MAP REDUCE


> show dbs
Cust    0.000GB
admin   0.000GB
config  0.000GB
local   0.000GB
> use Cust
switched to db Cust
> show collections
customer
> db.customer.insertMany({cust_id:"A123",amount:500,status:"A"},{cust_id:"A123",amount:250,status:"A"},{cust_id:"B212",amount:200,status:"A"},{cust_id:"A122",amount:300,status:"D"})
2021-04-06T10:33:28.586+0530 E QUERY    [thread1] TypeError: documents.map is not a function :
DBCollection.prototype.insertMany@src/mongo/shell/crud_api.js:295:1
@(shell):1:1
> db.customer.insert({cust_id:"A123",amt:500,status:"A"})
WriteResult({ "nInserted" : 1 })
> db.customer.insert({cust_id:"A123",amt:250,status:"A"})
WriteResult({ "nInserted" : 1 })
> db.customer.insert({cust_id:"B212",amt:200,status:"A"})
WriteResult({ "nInserted" : 1 })
> db.customer.insert({cust_id:"A122",amt:300,status:"D"})
WriteResult({ "nInserted" : 1 })
> db.customer.mapReduce(function(){emit(this.cust_id,this.amt);},function(key,values){return Array.sum(values)},{query:{status:"A"},out:"orderr_det"})
{
	"result" : "orderr_det",
	"timeMillis" : 432,
	"counts" : {
		"input" : 3,
		"emit" : 3,
		"reduce" : 1,
		"output" : 2
	},
	"ok" : 1
}
> db.order_det.find()
{ "cust_id":"A123", "values": 750 }
{ "cust_id":"B212", "values": 200 }




AGGREGATE OPERATORS AND ACCUMALATORS

> use Cust
switched to db Cust
> show collections
customer
orderr_det
> db.customer.find().pretty()
{
	"_id" : ObjectId("606bebec2d7a7bf877fc6ecd"),
	"cust_id" : "A123",
	"amt" : 500,
	"status" : "A"
}
{
	"_id" : ObjectId("606bebfd2d7a7bf877fc6ece"),
	"cust_id" : "A123",
	"amt" : 250,
	"status" : "A"
}
{
	"_id" : ObjectId("606bec122d7a7bf877fc6ecf"),
	"cust_id" : "B212",
	"amt" : 200,
	"status" : "A"
}
{
	"_id" : ObjectId("606bec282d7a7bf877fc6ed0"),
	"cust_id" : "A122",
	"amt" : 300,
	"status" : "D"
}

1.Retriew all the customers whose account status is active(A)

> db.customer.aggregate([{$match:{status:"A"}}])
{ "_id" : ObjectId("606bebec2d7a7bf877fc6ecd"), "cust_id" : "A123", "amt" : 500, "status" : "A" }
{ "_id" : ObjectId("606bebfd2d7a7bf877fc6ece"), "cust_id" : "A123", "amt" : 250, "status" : "A" }
{ "_id" : ObjectId("606bec122d7a7bf877fc6ecf"), "cust_id" : "B212", "amt" : 200, "status" : "A" }


2.Retriew the customers who has maximum amount in account

> db.customer.aggregate([{$group:{_id:"$cust_id","maxval":{$max:"$amt"}}}])
{ "_id" : "A122", "maxval" : 300 }
{ "_id" : "B212", "maxval" : 200 }
{ "_id" : "A123", "maxval" : 500 }

3.Retriew only customer id and status

> db.customer.aggregate([{$project:{_id:0,cust_id:1,status:1}}])
{ "cust_id" : "A123", "status" : "A" }
{ "cust_id" : "A123", "status" : "A" }
{ "cust_id" : "B212", "status" : "A" }
{ "cust_id" : "A122", "status" : "D" }

4.Retriew first 3 records from the collection

> db.customer.aggregate([{$limit:3}])
{ "_id" : ObjectId("606bebec2d7a7bf877fc6ecd"), "cust_id" : "A123", "amt" : 500, "status" : "A" }
{ "_id" : ObjectId("606bebfd2d7a7bf877fc6ece"), "cust_id" : "A123", "amt" : 250, "status" : "A" }
{ "_id" : ObjectId("606bec122d7a7bf877fc6ecf"), "cust_id" : "B212", "amt" : 200, "status" : "A" }

5.For every customers calculate the total amount

> db.customer.aggregate([{$group:{_id:"$cust_id","total":{$sum:"$amt"}}}])
{ "_id" : "A122", "total" : 300 }
{ "_id" : "B212", "total" : 200 }
{ "_id" : "A123", "total" : 750 }

6.Retriew all the customers with amount is greater than or equal to $300

> db.customer.aggregate([{$match:{amt:{$gte:300}}}])
{ "_id" : ObjectId("606bebec2d7a7bf877fc6ecd"), "cust_id" : "A123", "amt" : 500, "status" : "A" }
{ "_id" : ObjectId("606bec282d7a7bf877fc6ed0"), "cust_id" : "A122", "amt" : 300, "status" : "D" }
 

